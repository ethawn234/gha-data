name: execution-flow
on:
  workflow_dispatch:
  push:
    branches:
      - execution-control
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files

      - name: Output contents
        run: ls
      - name: Deploy
        run: |
          echo "Deploying..."
  
  report:
    runs-on: ubuntu-latest
    needs: [lint, deploy] # report job runs if any previous jobs fail; includes any job failure in deploy's job dependency chain
    if: failure()
    steps:
      - name: echo  -e "report failure report"
        run: echo -e "report failure report"

  # The notify job still runs even though it only needs the deploy job, which is skipped due to the test job failure
  # Why? A status of 'skipped'  counts as a failure-related state, and so here failure() returns true
  notify:
    runs-on: ubuntu-latest
    needs: deploy  # ‚ùå Only has access to deploy's result
    if: failure()  # Only evaluates failure of deploy
    steps:
      - name: notify
        id: notify-step
        run: |
          echo  -e "notify failure report"
          echo  -e "\nValidating notify job runs due to deploy job being skipped, not because deploy.result == 'failure': ${{ needs.deploy.result }}"
